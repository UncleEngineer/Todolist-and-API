from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from flask_cors import CORS
from datetime import datetime
import os
from werkzeug.exceptions import BadRequest

# Import routes
from web_routes import register_web_routes
from api_routes import register_api_routes
from models import db, Todo

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Flask app
app = Flask(__name__)

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ Secret Key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Flash Messages
app.secret_key = 'your-secret-key-here-change-in-production'

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ CORS ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Flutter ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ
CORS(app)

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SQLite
basedir = os.path.abspath(os.path.dirname(__file__))
app.config['SQLALCHEMY_DATABASE_URI'] = f'sqlite:///{os.path.join(basedir, "todos.db")}'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô SQLAlchemy
db.init_app(app)

# ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô routes
register_web_routes(app)
register_api_routes(app)

# Error handlers
@app.errorhandler(404)
def not_found(error):
    return jsonify({
        'success': False,
        'message': '‡πÑ‡∏°‡πà‡∏û‡∏ö endpoint ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏'
    }), 404

@app.errorhandler(500)
def internal_error(error):
    db.session.rollback()
    return jsonify({
        'success': False,
        'message': '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå'
    }), 500

if __name__ == '__main__':
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    with app.app_context():
        db.create_all()
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
        if Todo.query.count() == 0:
            sample_todos = [
                Todo(
                    id='1',
                    title='‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô',
                    description='‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡πâ‡∏≤‡∏ß ‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡∏ú‡∏±‡∏Å‡∏ú‡∏•‡πÑ‡∏°‡πâ',
                    is_completed=False
                ),
                Todo(
                    id='2',
                    title='‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡πâ‡∏≤‡∏ô',
                    description='‡πÄ‡∏Å‡πá‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏ô',
                    is_completed=True
                ),
                Todo(
                    id='3',
                    title='‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢',
                    description='‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏™‡πÄ‡∏ï‡πá‡∏õ 30 ‡∏ô‡∏≤‡∏ó‡∏µ',
                    is_completed=False
                ),
                Todo(
                    id='4',
                    title='‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠',
                    description='‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á',
                    is_completed=True
                ),
                Todo(
                    id='5',
                    title='‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå',
                    description='‡πÄ‡∏£‡∏µ‡∏¢‡∏ô Flutter ‡πÅ‡∏•‡∏∞ Python API Development',
                    is_completed=False
                )
            ]
            
            for todo in sample_todos:
                db.session.add(todo)
            
            db.session.commit()
            print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß")
    
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Todo Management Server...")
    print("üåê Web Interface: http://localhost:5000")
    print("üìã API Documentation: http://localhost:5000/api-docs")
    print("üîó API Endpoint: http://localhost:5000/api")
    app.run(debug=True, host='0.0.0.0', port=5000)